name: CI for OCG

on:
    push:
        branches:
        - main
    pull_request:
        branches:
          - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.5'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz | tar -xz -C /usr/local/bin

      - name: Run linters
        run: golangci-lint run ./...

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Check Docker Compose version
        run: docker-compose --version

      - name: Run build
        run: make start

      - name: Wait a bit
        run: sleep 10

      - name: Shutdown
        run: make stop

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Check Docker Compose version
        run: docker-compose --version

      - name: Run integration tests
        run: make test-integration

      - name: Run unit tests
        run: make test-unit

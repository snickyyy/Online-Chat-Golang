definitions:
  dto.ChangeUserProfileRequest:
    properties:
      new_description:
        type: string
      new_image:
        type: string
      new_username:
        type: string
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    required:
    - error
    type: object
  dto.LoginRequest:
    properties:
      password:
        type: string
      username_or_email:
        type: string
    required:
    - password
    - username_or_email
    type: object
  dto.RegisterRequest:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      password:
        type: string
      username:
        maxLength: 28
        minLength: 4
        type: string
    required:
    - confirm_password
    - email
    - password
    - username
    type: object
  dto.RegisterResponse:
    properties:
      message:
        type: string
      status:
        type: boolean
    required:
    - message
    - status
    type: object
  dto.UserProfile:
    properties:
      created_at:
        type: string
      description:
        type: string
      image:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /accounts/auth/confirm-account:
    get:
      consumes:
      - application/json
      description: Confirm users email
      parameters:
      - description: Token to confirm account
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: User confirm registration
      tags:
      - Auth
  /accounts/auth/login:
    post:
      consumes:
      - application/json
      description: Login to account
      parameters:
      - description: Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /accounts/auth/logout:
    get:
      consumes:
      - application/json
      description: Logout the session
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Logout
      tags:
      - Auth
  /accounts/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user behind the selected fields
      parameters:
      - description: Data to register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: User register
      tags:
      - Auth
  /accounts/profile/{username}:
    get:
      consumes:
      - application/json
      description: View user profile
      parameters:
      - description: Username of the user
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Profile
      tags:
      - profile
  /accounts/profile/edit:
    patch:
      consumes:
      - application/json
      description: Edit user profile
      parameters:
      - description: Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeUserProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Edit profile
      tags:
      - profile
swagger: "2.0"

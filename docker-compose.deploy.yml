services:
  backend:
    build: ./
    container_name: backend
    working_dir: /OCG
    restart: on-failure
    ports:
      - "8000:8000"
    command: sh -c "chmod +x ./commands/start_dev.sh && ./commands/start_dev.sh"
    volumes:
      - ./:/OCG
    env_file:
      - .env
    depends_on:
      - postgres
      - mongo
      - redis
    deploy:
      resources:
        limits:
          cpus:   '2.0'
          memory: '3G'
        reservations:
          cpus: '1.0'
          memory: '1G'

  postgres:
    image: postgres:16.4
    container_name: postgres
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2G'
        reservations:
          cpus: '0.5'
          memory: '1G'

  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: on-failure
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1G'

  mongo:
    image: mongo
    container_name: mongo
    restart: on-failure
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2G'
        reservations:
          cpus: '0.5'
          memory: '1G'

volumes:
  pg_data: { }
  redis_data: { }
  mongo_data: { }
